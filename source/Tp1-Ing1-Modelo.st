Object subclass: #SistemaDeSimulacion	instanceVariableNames: 'sistemaDeConstruccionConfigurado sistemaDeEjecucionDeCriteriosConfigurado sistemaDeExtraccionConfigurado sistemaDeGestionDeExcavadorasConfigurado sistemaDeGestionDeParcelasConfigurado'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Simulacion'!!SistemaDeSimulacion methodsFor: 'initialize' stamp: 'MonsiCapa 5/22/2017 20:11'!initialize	super initialize. 		sistemaDeConstruccionConfigurado := 		ObjetoSinConfigurar cuandoSePida: 'No se configuró el sistema de construcción'.	sistemaDeExtraccionConfigurado := 		ObjetoSinConfigurar cuandoSePida: 'No se configuró el sistema de extracción'.	sistemaDeEjecucionDeCriteriosConfigurado := 		ObjetoSinConfigurar cuandoSePida: 'No se configuró el sistema de ejecución de criterios'.	sistemaDeGestionDeExcavadorasConfigurado := 		ObjetoSinConfigurar cuandoSePida: 'No se configuró el sistema de gestión de excavadoras'.	sistemaDeGestionDeParcelasConfigurado :=		ObjetoSinConfigurar cuandoSePida: 'No se configuró el sistema de gestión de parcelas'.! !!SistemaDeSimulacion methodsFor: 'configuring' stamp: 'JuanVanecek 5/7/2017 14:08'!usarComoSistemaDeEjecucionDeCriteriosA: unSistemaDeEjecucionDeCriterios 	sistemaDeEjecucionDeCriteriosConfigurado := ObjetoConfigurado con: unSistemaDeEjecucionDeCriterios! !!SistemaDeSimulacion methodsFor: 'configuring' stamp: 'JuanVanecek 5/7/2017 06:45'!usarComoSistemaDeExtraccionA: unSistemaDeExtraccionDePozos 	sistemaDeExtraccionConfigurado := ObjetoConfigurado con: unSistemaDeExtraccionDePozos! !!SistemaDeSimulacion methodsFor: 'configuring' stamp: 'JuanVanecek 5/7/2017 14:18'!usarComoSistemaDeGestionDeExcavadorasA: unSistemaDeGestionDeExcavadoras 	sistemaDeGestionDeExcavadorasConfigurado := ObjetoConfigurado con: unSistemaDeGestionDeExcavadoras ! !!SistemaDeSimulacion methodsFor: 'configuring' stamp: 'JuanVanecek 5/7/2017 06:41'!usarComoSistemaDeConstruccionA: unSistemaDeConstruccionDePozos 	sistemaDeConstruccionConfigurado := ObjetoConfigurado con: unSistemaDeConstruccionDePozos ! !!SistemaDeSimulacion methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 20:11'!sistemaDeGestionDeParcelas		^ sistemaDeGestionDeParcelasConfigurado objetoConfigurado ! !!SistemaDeSimulacion methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 20:15'!usarComoSistemaDeGestionDeParcelasA: unSistemaDeGestionDeParcelas 		sistemaDeGestionDeParcelasConfigurado := ObjetoConfigurado con: unSistemaDeGestionDeParcelas ! !!SistemaDeSimulacion methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 14:58'!fechaDeSimulacion	^ Date today! !!SistemaDeSimulacion methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 07:07'!sistemaDeExtraccion	^ sistemaDeExtraccionConfigurado objetoConfigurado ! !!SistemaDeSimulacion methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 07:09'!sistemaDeConstruccion	^ sistemaDeConstruccionConfigurado objetoConfigurado ! !!SistemaDeSimulacion methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 13:22'!sistemaDeEjecucionDeCriterios	^ sistemaDeEjecucionDeCriteriosConfigurado objetoConfigurado ! !!SistemaDeSimulacion methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 14:17'!sistemaDeGestionDeExcavadoras	^ sistemaDeGestionDeExcavadorasConfigurado objetoConfigurado ! !Object subclass: #SistemaDeGestionDeParcelas	instanceVariableNames: 'yacimiento'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo'!!SistemaDeGestionDeParcelas methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 20:16'!parcelasDefinidas		^ yacimiento parcelasDefinidas ! !!SistemaDeGestionDeParcelas methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 20:16'!usarComoFuenteDeParcelasA: unYacimiento 		yacimiento := unYacimiento ! !!SistemaDeGestionDeParcelas methodsFor: 'instance creation' stamp: 'MonsiCapa 5/22/2017 20:14'!initializeComoParteDe: unSimulador	unSimulador usarComoSistemaDeGestionDeParcelasA: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SistemaDeGestionDeParcelas class	instanceVariableNames: ''!!SistemaDeGestionDeParcelas class methodsFor: 'instance creation' stamp: 'MonsiCapa 5/22/2017 20:13'!comoParteDe: unSimulador 		^ self new initializeComoParteDe: unSimulador! !Object subclass: #ObjetoConfiguradoBehavior	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Utility'!!ObjetoConfiguradoBehavior methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 06:54'!objetoConfigurado	self subclassResponsibility ! !ObjetoConfiguradoBehavior subclass: #ObjetoConfigurado	instanceVariableNames: 'objetoConfigurado'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Utility'!!ObjetoConfigurado methodsFor: 'Initialize' stamp: 'JuanVanecek 5/7/2017 06:55'!objetoConfigurado	^ objetoConfigurado! !!ObjetoConfigurado methodsFor: 'Initialize' stamp: 'JuanVanecek 5/7/2017 06:42'!initializeCon: unObjeto	super initialize. 		objetoConfigurado := unObjeto	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ObjetoConfigurado class	instanceVariableNames: ''!!ObjetoConfigurado class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/7/2017 06:41'!con: unObjeto		^ self new initializeCon: unObjeto! !ObjetoConfiguradoBehavior subclass: #ObjetoSinConfigurar	instanceVariableNames: 'mensajeDeError'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Utility'!!ObjetoSinConfigurar methodsFor: 'initialize' stamp: 'JuanVanecek 5/7/2017 06:57'!initializeConMensajeDeError: unMensajeDeError 		super initialize.		mensajeDeError := unMensajeDeError! !!ObjetoSinConfigurar methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 07:27'!objetoConfigurado		^ Error signal: mensajeDeError ! !!ObjetoSinConfigurar methodsFor: 'printing' stamp: 'JuanVanecek 5/7/2017 07:24'!printOn: aStream	aStream nextPutAll: mensajeDeError! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ObjetoSinConfigurar class	instanceVariableNames: ''!!ObjetoSinConfigurar class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/7/2017 06:56'!cuandoSePida: unMensaje	^ self new initializeConMensajeDeError: unMensaje! !Object subclass: #CatalogoDeExcavadorasRig	instanceVariableNames: 'catalogo'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Excavacion'!!CatalogoDeExcavadorasRig methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 20:58'!registrar: unaExcavadoraRig aUnCostoPorDia: unPrecio porUnMinimoDeDias: unaCantidadDeDias	catalogo at: unaExcavadoraRig put: ((Array new: 2)		at: self indicePrecio put: unPrecio;		at: self indiceAlquilerMinimo put: unaCantidadDeDias;		yourself)! !!CatalogoDeExcavadorasRig methodsFor: 'accessing' stamp: 'JuanVanecek 4/8/2017 13:27'!conLosRegistrosHacer: aBlockClosure 	catalogo keysAndValuesDo: [:excavadora :datosAlquiler | 		aBlockClosure 			value: excavadora 			value: (datosAlquiler at: self indicePrecio)			value: (datosAlquiler at: self indiceAlquilerMinimo)		 ]! !!CatalogoDeExcavadorasRig methodsFor: 'accessing' stamp: 'JuanVanecek 4/8/2017 13:24'!excavadorasDisponibles	^ catalogo keys! !!CatalogoDeExcavadorasRig methodsFor: 'private' stamp: 'JuanVanecek 4/8/2017 13:24'!indiceAlquilerMinimo	^ 2! !!CatalogoDeExcavadorasRig methodsFor: 'private' stamp: 'JuanVanecek 4/8/2017 13:23'!indicePrecio	^ 1! !!CatalogoDeExcavadorasRig methodsFor: 'initialize' stamp: 'JuanVanecek 4/8/2017 13:23'!initialize	super initialize. 		catalogo := Dictionary new.! !Object subclass: #ExcavadoraRig	instanceVariableNames: 'profundidadPorDia consumoPorDia'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Excavacion'!!ExcavadoraRig methodsFor: 'initialize' stamp: 'JuanVanecek 4/8/2017 13:20'!initializePerforandoEnMetrosEnUnDia: unaMedidaEnMetros consumiendoEnLitros: unaMedidaEnLitros	profundidadPorDia := unaMedidaEnMetros.	consumoPorDia := unaMedidaEnLitros.! !!ExcavadoraRig methodsFor: 'printing' stamp: 'JuanVanecek 4/9/2017 22:09'!printOn: aStream	aStream 		nextPutAll: 			('Excavadora que procesa {1} mts/dia consumiendo {2} lts/dia' 				format: { profundidadPorDia . consumoPorDia  })! !!ExcavadoraRig methodsFor: 'accessing' stamp: 'JuanVanecek 4/9/2017 18:09'!profundidadPorDia	^ profundidadPorDia! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ExcavadoraRig class	instanceVariableNames: ''!!ExcavadoraRig class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 4/8/2017 13:19'!perforandoEnMetrosEnUnDia: unaMedidaEnMetros consumiendoEnLitros: unaMedidaEnLitros	^ self new 		initializePerforandoEnMetrosEnUnDia: unaMedidaEnMetros		consumiendoEnLitros: unaMedidaEnLitros! !Object subclass: #SistemaDeGestionDeExcavadoras	instanceVariableNames: 'catalogo'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Excavacion'!!SistemaDeGestionDeExcavadoras methodsFor: 'initialize' stamp: 'JuanVanecek 5/7/2017 14:24'!initializeComoParteDe: unSistemaDeSimulacion 	super initialize. 		unSistemaDeSimulacion usarComoSistemaDeGestionDeExcavadorasA: self.		catalogo := Dictionary new.! !!SistemaDeGestionDeExcavadoras methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 14:25'!excavadorasDisponibles	^ catalogo keys! !!SistemaDeGestionDeExcavadoras methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 14:24'!registrar: unaExcavadoraRig conUnCostoPorDia: unPrecio porUnMinimoDeDias: unaCantidadDeDias 	catalogo at: unaExcavadoraRig put: ((Array new: 2)		at: self indicePrecio put: unPrecio;		at: self indiceAlquilerMinimo put: unaCantidadDeDias;		yourself	)! !!SistemaDeGestionDeExcavadoras methodsFor: 'private' stamp: 'JuanVanecek 5/7/2017 14:25'!indiceAlquilerMinimo	^ 2! !!SistemaDeGestionDeExcavadoras methodsFor: 'private' stamp: 'JuanVanecek 5/7/2017 14:25'!indicePrecio	^ 1! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SistemaDeGestionDeExcavadoras class	instanceVariableNames: ''!!SistemaDeGestionDeExcavadoras class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/7/2017 14:15'!comoParteDe: unSistemaDeSimulacion 	^ self new initializeComoParteDe: unSistemaDeSimulacion! !Object subclass: #CalculadoraDefaultDePresiones	instanceVariableNames: 'alpha1 alpha2'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!!CalculadoraDefaultDePresiones methodsFor: 'private' stamp: 'JuanVanecek 5/18/2017 23:50'!siEstaTerminado: unPozoDeExtraccion yHubieronExtraccionesA: unaFecha en: unSimulador 	entonces: aBlockClosure siNoHubieronExtraccion: aBlockClosure5 siNoEstaConstruido: aBlockClosure6 		^ (self estaTerminado: unPozoDeExtraccion a: unaFecha en: unSimulador)		ifTrue: [ 			 (self cantidadDePozosActivosEn: unSimulador a: unaFecha) = 0				ifTrue: aBlockClosure5				ifFalse: aBlockClosure]		ifFalse: aBlockClosure6! !!CalculadoraDefaultDePresiones methodsFor: 'private' stamp: 'JuanVanecek 5/10/2017 23:17'!estaTerminado: unPozoDeExtraccion a: unaFecha en: unSimulador		" Se puede extraer recien el primer dia despues de construido, y ese dia aun tiene como presion a la inicial - juan"	^ (unSimulador sistemaDeConstruccion fechaDeFinConstruccionDe: unPozoDeExtraccion) < unaFecha! !!CalculadoraDefaultDePresiones methodsFor: 'private' stamp: 'JuanVanecek 5/20/2017 15:25'!limitar: producto porLosTanquesConstruidosPara: unaPlantaProcesadora en: unSimulador a: unaFecha	^ producto 		acotadoPorElAguaAUnTotalDe: (unSimulador sistemaDeExtraccion capacidadLibreParaAguaEn: unaPlantaProcesadora a: unaFecha)		yPorElGasA: (unSimulador sistemaDeExtraccion capacidadLibreParaGasEn: unaPlantaProcesadora a: unaFecha)! !!CalculadoraDefaultDePresiones methodsFor: 'private' stamp: 'JuanVanecek 5/19/2017 00:04'!limitar: unaCantidadDeProducto porElProcesamientoDe: unaPlantaProcesadora 		^ unaPlantaProcesadora procesamientoDiario min: unaCantidadDeProducto! !!CalculadoraDefaultDePresiones methodsFor: 'private' stamp: 'JuanVanecek 5/13/2017 01:33'!cantidadDePozosActivosEn: unSimulador a: unaFecha	^ unSimulador sistemaDeExtraccion cantidadDePozosActivosA: unaFecha! !!CalculadoraDefaultDePresiones methodsFor: 'initialize' stamp: 'JuanVanecek 5/1/2017 13:51'!initializeUsandoComoAlpha1: aNumber comoAlpha2: anotherNumber 		alpha1 := aNumber. 	alpha2 := anotherNumber! !!CalculadoraDefaultDePresiones methodsFor: 'accessing' stamp: 'JuanVanecek 5/22/2017 02:21'!presionDe: unPozoDeExtraccion a: unaFecha usando: unSimulador	| sistemaDeExtraccion |	sistemaDeExtraccion := unSimulador sistemaDeExtraccion.	^ (self estaTerminado: unPozoDeExtraccion a: unaFecha en: unSimulador)		ifTrue: [ | fechaAnterior |			fechaAnterior := unaFecha previous.						(sistemaDeExtraccion ultimoEventoAfectando: unPozoDeExtraccion yacimiento a: fechaAnterior)				siEsExtraccion: [ | presionAlDiaAnterior cocienteVolumen pozosActivos beta |					presionAlDiaAnterior := sistemaDeExtraccion presionDe: unPozoDeExtraccion a: fechaAnterior.					pozosActivos := self cantidadDePozosActivosEn: unSimulador a: fechaAnterior.					cocienteVolumen := 						(sistemaDeExtraccion volumenReservorioDe: unPozoDeExtraccion a: fechaAnterior) / 						(sistemaDeExtraccion volumenInicialDelReservorioDe: unPozoDeExtraccion).											beta := 0.1 * cocienteVolumen / pozosActivos.					presionAlDiaAnterior / (Float e ** beta) ]				siEsReinyeccion: [ | volumenInicial volumenActual | 					volumenInicial := sistemaDeExtraccion volumenInicialDelReservorioDe: unPozoDeExtraccion.					volumenActual := sistemaDeExtraccion volumenReservorioDe: unPozoDeExtraccion a: unaFecha.					unPozoDeExtraccion presionInicial * volumenActual / volumenInicial]				enOtroCaso: [ sistemaDeExtraccion presionDe: unPozoDeExtraccion a: fechaAnterior ].			 ]		ifFalse: [ unPozoDeExtraccion presionInicial ]! !!CalculadoraDefaultDePresiones methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 20:40'!potencialDe: unPozoDeExtraccion en: unaFecha usando: unSimulador			| presionPonderada | 		presionPonderada := 		(self presionDe: unPozoDeExtraccion a: unaFecha usando: unSimulador) / 		(self cantidadDePozosActivosEn: unSimulador a: unaFecha).	^ alpha1 * presionPonderada + (alpha2 * (presionPonderada ** 2))! !!CalculadoraDefaultDePresiones methodsFor: 'accessing' stamp: 'JuanVanecek 5/21/2017 22:38'!productoExtraidoDe: unPozoDeExtraccion a: unaFecha usando: unSimulador	^ self 		siEstaTerminado: unPozoDeExtraccion		yHubieronExtraccionesA: unaFecha		en: unSimulador		entonces: [  | potencialPozo | 			potencialPozo := self potencialDe: unPozoDeExtraccion en: unaFecha usando: unSimulador.						ProductoDeReservorio 				cantidad: (self limitar: potencialPozo porElProcesamientoDe: unPozoDeExtraccion plantaProcesadora)				compuestoDe: unPozoDeExtraccion yacimiento composicionInicial ]		siNoHubieronExtraccion: [  self productoExtraidoDe: unPozoDeExtraccion a: unaFecha previous usando: unSimulador  ]		siNoEstaConstruido: [  ProductoDeReservorio vacio  ] ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CalculadoraDefaultDePresiones class	instanceVariableNames: ''!!CalculadoraDefaultDePresiones class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/1/2017 13:49'!usandoComoAlpha1: alpha1 comoAlpha2: alpha2		self 		assert: alpha1 between: 0.1 and: 0.6;		assert: alpha2 between: 0.005 and: 0.01.			^ self new initializeUsandoComoAlpha1: alpha1 comoAlpha2: alpha2! !!CalculadoraDefaultDePresiones class methodsFor: 'Asserting' stamp: 'JuanVanecek 5/1/2017 13:50'!assert: aNumber between: aLowerBound and: anUpperBound		(aNumber between: aLowerBound and: anUpperBound)		ifFalse: [ 			Exception signal: ('El valor debe estar entre {1} y {2}' format: { aLowerBound . anUpperBound } )]! !Object subclass: #EventoSobrePozo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!!EventoSobrePozo methodsFor: 'accessing' stamp: 'JuanVanecek 5/22/2017 01:14'!pozo		self subclassResponsibility ! !!EventoSobrePozo methodsFor: 'accessing' stamp: 'JuanVanecek 5/22/2017 01:02'!fechaDeEvento	self subclassResponsibility ! !!EventoSobrePozo methodsFor: 'testing' stamp: 'JuanVanecek 5/22/2017 01:19'!esReinyeccion	^ self siEsExtraccion: [ false ] siEsReinyeccion: [ true ] enOtroCaso: [ false ]! !!EventoSobrePozo methodsFor: 'testing' stamp: 'JuanVanecek 5/22/2017 01:10'!siEsExtraccion: unBloqueParaExtraccion 	siEsReinyeccion: unBloqueParaReinyeccion 	enOtroCaso: unBloqueDefault	self subclassResponsibility ! !!EventoSobrePozo methodsFor: 'testing' stamp: 'JuanVanecek 5/22/2017 01:16'!esExtraccion		^ self siEsExtraccion: [ true ] siEsReinyeccion: [ false ] enOtroCaso: [ false ]! !EventoSobrePozo subclass: #EventoDeExtraccion	instanceVariableNames: 'pozo fechaDeExtraccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!!EventoDeExtraccion methodsFor: 'instance creation' stamp: 'JuanVanecek 5/1/2017 14:21'!initializeEn: unPozoDeExtraccion al: unFecha	pozo := unPozoDeExtraccion. 	fechaDeExtraccion := unFecha! !!EventoDeExtraccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/1/2017 15:06'!fechaDeExtraccion		^ fechaDeExtraccion! !!EventoDeExtraccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 19:28'!printOn: aStream	aStream nextPutAll: ('Extracción al {1} de {2}' format: { fechaDeExtraccion . pozo })! !!EventoDeExtraccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/1/2017 15:07'!pozo		^ pozo! !!EventoDeExtraccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/22/2017 01:11'!fechaDeEvento		^ self fechaDeExtraccion ! !!EventoDeExtraccion methodsFor: 'testing' stamp: 'JuanVanecek 5/22/2017 01:12'!siEsExtraccion: unBloqueParaExtraccion 	siEsReinyeccion: unBloqueParaReinyeccion 	enOtroCaso: unBloqueDefault	^ unBloqueParaExtraccion value! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EventoDeExtraccion class	instanceVariableNames: ''!!EventoDeExtraccion class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/1/2017 14:16'!en: unPozoDeExtraccion al: unFecha		^ self new initializeEn: unPozoDeExtraccion al: unFecha! !EventoSobrePozo subclass: #EventoDeReinyeccion	instanceVariableNames: 'volumenReinyectado pozo fechaDeReinyeccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!!EventoDeReinyeccion methodsFor: 'testing' stamp: 'JuanVanecek 5/22/2017 01:37'!printOn: aStream	aStream nextPutAll: ('Reinyección al {1} de {2} m3 en {3}' format: { self fechaDeEvento . volumenReinyectado . self pozo })! !!EventoDeReinyeccion methodsFor: 'testing' stamp: 'JuanVanecek 5/22/2017 01:16'!siEsExtraccion: unBloqueParaExtraccion 	siEsReinyeccion: unBloqueParaReinyeccion 	enOtroCaso: unBloqueDefault		^ unBloqueParaReinyeccion value! !!EventoDeReinyeccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/21/2017 22:05'!fechaDeReinyeccion	^ fechaDeReinyeccion! !!EventoDeReinyeccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/22/2017 01:44'!volumenReinyectado	^ volumenReinyectado! !!EventoDeReinyeccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/22/2017 01:14'!pozo		^ pozo! !!EventoDeReinyeccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/22/2017 01:14'!fechaDeEvento	^ fechaDeReinyeccion ! !!EventoDeReinyeccion methodsFor: 'initialize' stamp: 'JuanVanecek 5/21/2017 22:05'!initializeDe: unVolumen en: unPozoDeExtraccion el: unaFecha		volumenReinyectado := unVolumen. 	pozo := unPozoDeExtraccion.	fechaDeReinyeccion := unaFecha. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EventoDeReinyeccion class	instanceVariableNames: ''!!EventoDeReinyeccion class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/21/2017 22:01'!de: unVolumen en: unPozoDeExtraccion el: unaFecha		^ self new initializeDe: unVolumen en: unPozoDeExtraccion el: unaFecha! !EventoSobrePozo subclass: #EventoSobrePozoNulo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!!EventoSobrePozoNulo methodsFor: 'testing' stamp: 'JuanVanecek 5/22/2017 01:11'!siEsExtraccion: unBloqueParaExtraccion 	siEsReinyeccion: unBloqueParaReinyeccion 	enOtroCaso: unBloqueDefault	^ unBloqueDefault value! !Error subclass: #ExtraccionInvalida	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!Error subclass: #ReinyeccionInvalida	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!Object subclass: #SistemaDeExtraccionDePozos	instanceVariableNames: 'calculadoraDePresion simulador extracciones reinyecciones'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Extraccion'!!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/22/2017 01:19'!assertNoHayReinyeccionesEn: unaFecha 	extracciones		detect: [:evento | evento esReinyeccion and: [ evento fechaDeReinyeccion = unaFecha ]]		ifFound: [:evento | ExtraccionInvalida signal: 'No se puede extraer en esta fecha ya hay una reinyeccion' ]		ifNone: [ ]! !!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/22/2017 01:42'!totalizarEventos: tipoEventoSelector	hastaInclusive: unaFecha	sobrePozosQueCumplen: filtroDePozo	haciendo: unInjectBlock	| eventos | 		eventos := extracciones select: [:evento | 		(evento perform: tipoEventoSelector) and: [			evento fechaDeEvento <= unaFecha and: [ 				filtroDePozo value: evento pozo]]].		^ eventos inject: 0 into: unInjectBlock! !!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/21/2017 21:42'!assert: unBien estaConstruidoAl: unaFecha 		(simulador sistemaDeConstruccion estaConstruido: unBien a: unaFecha)		ifFalse: [ 			ExtraccionInvalida signal: ('No se puede extraer producto porque {1} no está terminado al {2} aún' format: { unBien . unaFecha })]! !!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/21/2017 19:18'!assertNoHayExcesoDeAguaLuegoDe: unaExtraccion 		| capacidadLibre | 		capacidadLibre := self capacidadLibreParaAguaEn: unaExtraccion pozo plantaProcesadora a: unaExtraccion fechaDeExtraccion.	capacidadLibre < 0		ifTrue: [ ExtraccionInvalida signal: ('Hay un exceso de {1} m3 de agua' format: { capacidadLibre negated }) ]! !!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/21/2017 21:24'!assertNoHayExtraccionesA: unaFecha	(self cantidadDePozosActivosA: unaFecha) > 0 		ifTrue: [ 			ReinyeccionInvalida signal: ('No se puede reinyectar ya que hay extracciones el {1}' format: { unaFecha }) ]! !!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/7/2017 07:01'!configurarseEnElSimulador	simulador usarComoSistemaDeExtraccionA: self.! !!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/21/2017 19:18'!assertNoHayExcesoDeGasLuegoDe: unaExtraccion 		| capacidadLibre | 		capacidadLibre := self capacidadLibreParaGasEn: unaExtraccion pozo plantaProcesadora a: unaExtraccion fechaDeExtraccion.	capacidadLibre < 0		ifTrue: [ ExtraccionInvalida signal: ('Hay un exceso de {1} m3 de gas' format: { capacidadLibre negated }) ]! !!SistemaDeExtraccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/21/2017 21:44'!agregarExtraccionSiHayEspacioParaLosDeshechos: unaExtraccion 	extracciones add: unaExtraccion.		[  		self assertNoHayExcesoDeAguaLuegoDe: unaExtraccion. 		self assertNoHayExcesoDeGasLuegoDe: unaExtraccion]			on: ExtraccionInvalida 			do: [ :signal | 				extracciones remove: unaExtraccion.				signal signal: ('No se pudo completar la extracción porque: {1}' format: { signal messageText }) ].! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/22/2017 01:10'!ultimoEventoAfectando: unYacimiento a: unaFecha	^ extracciones 		detect: [ :evento | evento pozo yacimiento = unYacimiento and: [ evento fechaDeEvento = unaFecha ]]		ifFound: [ :evento | evento ]		ifNone: [ (Smalltalk at: #EventoSobrePozoNulo) new ]! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/22/2017 02:00'!volumenReservorioDe: unPozoDeExtraccion a: unaFecha		| yacimiento | 		yacimiento := unPozoDeExtraccion yacimiento.	^ yacimiento volumenDeProductoInicial 		- (self volumenExtraidoDe: yacimiento a: unaFecha previous) 		+ (self volumenReinyectadoEn: yacimiento a: unaFecha previous)! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/12/2017 22:46'!productoExtraidoDe: unPozoDeExtraccion a: unaFecha	" Cantidad de producto extraido de un pozo al final de una fecha "		^ calculadoraDePresion productoExtraidoDe: unPozoDeExtraccion a: unaFecha usando: simulador! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/22/2017 01:41'!volumenReinyectadoEn: unYacimiento a: unaFecha 	^ self 		totalizarEventos: #esReinyeccion		hastaInclusive: unaFecha		sobrePozosQueCumplen: [ :pozo | pozo yacimiento = unYacimiento ]		haciendo: [ :total :reinyeccion | total + reinyeccion volumenReinyectado ]! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/7/2017 19:21'!presionDe: unPozoDeExtraccion a: unaFecha	^ calculadoraDePresion presionDe: unPozoDeExtraccion a: unaFecha usando: simulador! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/22/2017 01:15'!cantidadDePozosActivosA: unaFecha 	^ (extracciones select: [ :evento | evento esExtraccion and: [evento fechaDeExtraccion = unaFecha] ]) size! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/22/2017 01:47'!capacidadLibreParaAguaEn: unaPlantaProcesadora a: unaFecha		| capacidadTotal aguaExtraida | 		capacidadTotal := simulador sistemaDeConstruccion capacidadTotalDeAguaDe: unaPlantaProcesadora a: unaFecha. 		aguaExtraida := self 		totalizarEventos: #esExtraccion		hastaInclusive: unaFecha		sobrePozosQueCumplen: [ :pozo | pozo plantaProcesadora = unaPlantaProcesadora ]		haciendo: [ :total :evento | total + (self productoExtraidoDe: evento pozo a: evento fechaDeExtraccion) cantidadDeAgua ]. 		^ capacidadTotal - aguaExtraida ! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/22/2017 01:48'!capacidadLibreParaGasEn: unaPlantaProcesadora a: unaFecha		| capacidadTotal gasExtraido | 		capacidadTotal := simulador sistemaDeConstruccion capacidadTotalDeGasDe: unaPlantaProcesadora a: unaFecha. 		gasExtraido := self 		totalizarEventos: #esExtraccion		hastaInclusive: unaFecha		sobrePozosQueCumplen: [ :pozo | pozo plantaProcesadora = unaPlantaProcesadora ]		haciendo: [ :total :evento | total + (self productoExtraidoDe: evento pozo a: evento fechaDeExtraccion) cantidadDeGas ]. 		^ capacidadTotal - gasExtraido ! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/22/2017 01:46'!volumenExtraidoDe: unYacimiento a: unaFecha 	" Volumen extraido de unYacimiento al final del dia unaFecha "		^ self 		totalizarEventos: #esExtraccion		hastaInclusive: unaFecha		sobrePozosQueCumplen: [ :pozo | pozo yacimiento = unYacimiento ]		haciendo: [:total :extraccion | 			total + (self productoExtraidoDe: extraccion pozo a: unaFecha) cantidadProducto]! !!SistemaDeExtraccionDePozos methodsFor: 'consultas' stamp: 'JuanVanecek 5/7/2017 06:24'!volumenInicialDelReservorioDe: unPozoDeExtraccion 	^ unPozoDeExtraccion yacimiento volumenDeProductoInicial ! !!SistemaDeExtraccionDePozos methodsFor: 'eventos' stamp: 'JuanVanecek 5/22/2017 01:50'!reinyectar: unVolumen deAguaEn: unPozoDeExtraccion el: unaFecha	self assertNoHayExtraccionesA: unaFecha. 		extracciones add: (EventoDeReinyeccion de: unVolumen en: unPozoDeExtraccion el: unaFecha)! !!SistemaDeExtraccionDePozos methodsFor: 'eventos' stamp: 'JuanVanecek 5/22/2017 01:50'!reinyectar: unVolumen deGasEn: unPozoDeExtraccion el: unaFecha	self assertNoHayExtraccionesA: unaFecha. 		extracciones add: (EventoDeReinyeccion de: unVolumen en: unPozoDeExtraccion el: unaFecha)! !!SistemaDeExtraccionDePozos methodsFor: 'eventos' stamp: 'JuanVanecek 5/21/2017 21:41'!extraerProductoDe: unPozoDeExtraccion en: unaFecha 		self		assert: unPozoDeExtraccion plantaProcesadora estaConstruidoAl: unaFecha; 		assert: unPozoDeExtraccion estaConstruidoAl: unaFecha; 		assertNoHayReinyeccionesEn: unaFecha.		self agregarExtraccionSiHayEspacioParaLosDeshechos: (EventoDeExtraccion en: unPozoDeExtraccion al: unaFecha)! !!SistemaDeExtraccionDePozos methodsFor: 'initialize' stamp: 'JuanVanecek 5/21/2017 21:54'!initializeComoParteDe: unSistemaDeSimulacion calcuandoPresionCon: aCalculadoraDefaultDePresiones 		super initialize.	simulador := unSistemaDeSimulacion. 	calculadoraDePresion := aCalculadoraDefaultDePresiones.	extracciones := OrderedCollection new.	reinyecciones := OrderedCollection new.		self configurarseEnElSimulador.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SistemaDeExtraccionDePozos class	instanceVariableNames: ''!!SistemaDeExtraccionDePozos class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/7/2017 06:44'!comoParteDe: unSistemaDeSimulacion calcuandoPresionCon: unaCalculadoraDefaultDePresiones 		^ self new		initializeComoParteDe: unSistemaDeSimulacion 		calcuandoPresionCon: unaCalculadoraDefaultDePresiones ! !Object subclass: #ComposicionPorcentualDeReservorio	instanceVariableNames: 'porcentajeDePetroleo porcentajeDeGas porcentajeDeAgua'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!ComposicionPorcentualDeReservorio methodsFor: 'initialize' stamp: 'JuanVanecek 5/19/2017 00:06'!printOn: aStream 	aStream nextPutAll: (		'Petroleo {1}%, Gas {2}%, Agua {3}%' 			format: {porcentajeDePetroleo . porcentajeDeGas . porcentajeDeAgua})! !!ComposicionPorcentualDeReservorio methodsFor: 'initialize' stamp: 'JuanVanecek 5/18/2017 22:33'!initializePetroleo: unaCantidadDePetroleo gas: unaCantidadDeGas agua: unaCantidadDeAgua	porcentajeDePetroleo := unaCantidadDePetroleo.	porcentajeDeGas := unaCantidadDeGas.	porcentajeDeAgua := unaCantidadDeAgua! !!ComposicionPorcentualDeReservorio methodsFor: 'accessing' stamp: 'JuanVanecek 5/19/2017 00:30'!porcentajeDeGas	^ porcentajeDeGas! !!ComposicionPorcentualDeReservorio methodsFor: 'accessing' stamp: 'JuanVanecek 5/19/2017 00:29'!porcentajeDeAgua	^ porcentajeDeAgua! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ComposicionPorcentualDeReservorio class	instanceVariableNames: ''!!ComposicionPorcentualDeReservorio class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/19/2017 00:33'!nula		^ self gas: 0 agua: 0! !!ComposicionPorcentualDeReservorio class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/19/2017 00:33'!gas: unaCantidadDeGas agua: unaCantidadDeAgua		^ self 		petroleo: 100 - unaCantidadDeGas - unaCantidadDeAgua 		gas: unaCantidadDeGas 		agua: unaCantidadDeAgua! !!ComposicionPorcentualDeReservorio class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/18/2017 22:46'!petroleo: unaCantidadDePetroleo gas: unaCantidadDeGas agua: unaCantidadDeAgua		self assertSumanCien: (Array with: unaCantidadDePetroleo with: unaCantidadDeGas with: unaCantidadDeAgua).		^ self new initializePetroleo: unaCantidadDePetroleo gas: unaCantidadDeGas agua: unaCantidadDeAgua! !!ComposicionPorcentualDeReservorio class methodsFor: 'private-precondition' stamp: 'JuanVanecek 5/18/2017 22:44'!sumOfAll: aCollection startingWith: aSeed 	^ aCollection 		inject: aSeed		into: [:accumulatedValue :addend | accumulatedValue + addend]! !!ComposicionPorcentualDeReservorio class methodsFor: 'private-precondition' stamp: 'JuanVanecek 5/18/2017 22:44'!assertSumanCien: aNumberCollection 	(self sumOfAll: aNumberCollection startingWith: 0) = 100 		ifFalse: [AssertionFailure signal: 'Los compuestos tienen que sumar el 100% del reservorio'].! !Object subclass: #MantoGeologico	instanceVariableNames: 'nombre resistencia'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!MantoGeologico methodsFor: 'Printing' stamp: 'JuanVanecek 4/9/2017 22:07'!printOn: aStream	aStream nextPutAll: ('{1} (Resistencia {2}%)' format: { nombre . resistencia } )! !!MantoGeologico methodsFor: 'Initialize' stamp: 'JuanVanecek 4/9/2017 17:32'!initializeConocidoComo: unNombre ofreciendoUnaResistenciaDel: unPorcentaje	nombre := unNombre. 	resistencia := unPorcentaje! !!MantoGeologico methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 21:52'!resistenciaTerreno	^ resistencia! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MantoGeologico class	instanceVariableNames: ''!!MantoGeologico class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 4/9/2017 17:31'!conocidoComo: unNombre ofreciendoUnaResistenciaDel: unPorcentaje	^ self new initializeConocidoComo: unNombre ofreciendoUnaResistenciaDel: unPorcentaje! !Object subclass: #ParcelaDeYacimiento	instanceVariableNames: 'presionInicial profundidadDeReservorio mantoGeologico yacimiento'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!ParcelaDeYacimiento methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:09'!distanciaAlReservorio	^ profundidadDeReservorio ! !!ParcelaDeYacimiento methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 13:54'!presionInicial		^ presionInicial! !!ParcelaDeYacimiento methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 21:51'!resistenciaTerreno	^ mantoGeologico resistenciaTerreno! !!ParcelaDeYacimiento methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 16:47'!yacimiento	^ yacimiento! !!ParcelaDeYacimiento methodsFor: 'Initialize' stamp: 'JuanVanecek 5/1/2017 16:49'!initializeDeTipo: aMantoGeologico 	conPresionInicial: unaMedidaDePresion 	profunidadEnMetros: unaMedidaDeDistancia	alReservorioEn: unYacimiento		mantoGeologico := aMantoGeologico.	presionInicial := unaMedidaDePresion.	profundidadDeReservorio := unaMedidaDeDistancia.	yacimiento := unYacimiento ! !!ParcelaDeYacimiento methodsFor: 'Printing' stamp: 'JuanVanecek 4/9/2017 22:16'!printOn: aStream	aStream 		nextPutAll:			('Parcela de tipo {1} con reservorio a {2} mts y presion {3} PSIA' 				format: {mantoGeologico . profundidadDeReservorio . presionInicial})	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ParcelaDeYacimiento class	instanceVariableNames: ''!!ParcelaDeYacimiento class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/1/2017 16:49'!deTipo: unMantoGeologico  	conPresionInicial: unaMedidaDePresion 	profunidadEnMetros: unaMedidaDeDistancia	alReservorioEn: unYacimiento		^self new 		initializeDeTipo: unMantoGeologico		conPresionInicial: unaMedidaDePresion 		profunidadEnMetros: unaMedidaDeDistancia		alReservorioEn: unYacimiento! !Object subclass: #PlantaProcesadora	instanceVariableNames: 'tiempoDeConstruccion costoDeConstruccion procesamientoDiario tanqueDeAlmacenamientos'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!PlantaProcesadora methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 20:28'!procesamientoDiario		^ procesamientoDiario! !!PlantaProcesadora methodsFor: 'Initialize' stamp: 'JuanVanecek 4/9/2017 11:11'!initializeConstruidaEnDias: unaCantidadDeDias 	conUnCostoTotalDe: unPrecio 	procesandoUnVolumenDiarioDe: unaCantidadDeVolumen		tiempoDeConstruccion := unaCantidadDeDias. 	costoDeConstruccion := unPrecio. 	procesamientoDiario := unaCantidadDeVolumen.	tanqueDeAlmacenamientos := OrderedCollection new.! !!PlantaProcesadora methodsFor: 'Printing' stamp: 'JuanVanecek 4/9/2017 22:22'!printOn: aStream 	aStream nextPutAll: ('Planta Procesadora con procesamiento de {1} cm3/dia' format: {procesamientoDiario})! !!PlantaProcesadora methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 12:19'!tiempoDeConstruccion		^ tiempoDeConstruccion ! !!PlantaProcesadora methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 11:11'!conectar: aTanqueDeAlmacenamiento	tanqueDeAlmacenamientos add: aTanqueDeAlmacenamiento! !!PlantaProcesadora methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 11:12'!tanquesDeAlmacenamiento	^ tanqueDeAlmacenamientos ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PlantaProcesadora class	instanceVariableNames: ''!!PlantaProcesadora class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 4/9/2017 10:37'!construidaEnDias: unaCantidadDeDias 	conUnCostoTotalDe: unPrecio 	procesandoUnVolumenDiarioDe: unaCantidadDeVolumen		^ self new 		initializeConstruidaEnDias: unaCantidadDeDias 		conUnCostoTotalDe: unPrecio 		procesandoUnVolumenDiarioDe: unaCantidadDeVolumen! !Object subclass: #PozoDeExtraccion	instanceVariableNames: 'parcelaDeYacimiento plantaProcesadora'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!PozoDeExtraccion methodsFor: 'Initialize' stamp: 'JuanVanecek 4/9/2017 17:46'!initializeEn: unaParcelaDeYacimiento conectadaA: unaPlantaProcesadora 		parcelaDeYacimiento := unaParcelaDeYacimiento.	plantaProcesadora := unaPlantaProcesadora! !!PozoDeExtraccion methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 20:30'!plantaProcesadora		^ plantaProcesadora! !!PozoDeExtraccion methodsFor: 'Printing' stamp: 'JuanVanecek 4/9/2017 22:18'!printOn: aStream	aStream nextPutAll: ('Pozo de extraccion en {1}' format: { parcelaDeYacimiento })! !!PozoDeExtraccion methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 21:51'!resistenciaDeLaParcela	^ parcelaDeYacimiento resistenciaTerreno! !!PozoDeExtraccion methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:08'!distanciaAlReservorio	^ parcelaDeYacimiento distanciaAlReservorio! !!PozoDeExtraccion methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 13:54'!presionInicial		^ parcelaDeYacimiento presionInicial! !!PozoDeExtraccion methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 16:47'!yacimiento		^ parcelaDeYacimiento yacimiento! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PozoDeExtraccion class	instanceVariableNames: ''!!PozoDeExtraccion class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 4/9/2017 17:46'!en: unaParcelaDeYacimiento conectadaA: unaPlantaProcesadora 	^ self new initializeEn: unaParcelaDeYacimiento conectadaA: unaPlantaProcesadora! !Object subclass: #ProductoDeReservorio	instanceVariableNames: 'cantidad composicion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!ProductoDeReservorio methodsFor: 'accessing' stamp: 'JuanVanecek 5/18/2017 23:04'!cantidadProducto		^ cantidad! !!ProductoDeReservorio methodsFor: 'accessing' stamp: 'JuanVanecek 5/19/2017 01:17'!porcentajeDeAgua	^ composicion porcentajeDeAgua ! !!ProductoDeReservorio methodsFor: 'accessing' stamp: 'JuanVanecek 5/19/2017 01:18'!porcentajeDeGas	^ composicion porcentajeDeGas ! !!ProductoDeReservorio methodsFor: 'accessing' stamp: 'JuanVanecek 5/19/2017 00:29'!cantidadDeAgua	^ self cantidadProducto * (composicion porcentajeDeAgua / 100)! !!ProductoDeReservorio methodsFor: 'accessing' stamp: 'JuanVanecek 5/19/2017 00:30'!cantidadDeGas	^ self cantidadProducto * (composicion porcentajeDeGas / 100)! !!ProductoDeReservorio methodsFor: 'printing' stamp: 'JuanVanecek 5/19/2017 00:08'!printOn: aStream	aStream nextPutAll: ('{1} m3 ({2})' format: { cantidad . composicion })! !!ProductoDeReservorio methodsFor: 'initialize' stamp: 'JuanVanecek 5/18/2017 23:01'!initializeCantidad: unNumero compuestoDe: unaComposicionPorcentual		cantidad := unNumero.	composicion := unaComposicionPorcentual! !!ProductoDeReservorio methodsFor: 'converting' stamp: 'JuanVanecek 5/19/2017 00:28'!acotadoPorElAguaAUnTotalDe: limiteAgua yPorElGasA: limiteGas	| productoAcotadoPorElAgua productoAcotadoPorElGas | 		productoAcotadoPorElAgua := limiteAgua * (self cantidadProducto) / (self cantidadDeAgua).	productoAcotadoPorElGas := limiteGas * (self cantidadProducto) / (self cantidadDeGas).		^ self class 		cantidad: ((self cantidadProducto min: productoAcotadoPorElAgua) min: productoAcotadoPorElGas)		compuestoDe: composicion ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ProductoDeReservorio class	instanceVariableNames: ''!!ProductoDeReservorio class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/18/2017 23:06'!vacio		^ self cantidad: 0 compuestoDe: ComposicionPorcentualDeReservorio nula! !!ProductoDeReservorio class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/18/2017 23:00'!cantidad: unNumero compuestoDe: aComposicionPorcentualDeReservorio 		^ self new initializeCantidad: unNumero compuestoDe: aComposicionPorcentualDeReservorio ! !Object subclass: #TanqueDeAlmacenamiento	instanceVariableNames: 'plantaProcesadora capacidadTotal tiempoDeConstruccion costoDeConstruccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!TanqueDeAlmacenamiento methodsFor: 'initialize' stamp: 'JuanVanecek 4/9/2017 11:27'!initializeConstruidaEnDias: unaCantidadDeDias	conUnCostoTotalDe: unPrecio	conectadoA: unaPlantaProcesadora 	conCapacidadDe: unaCantidadDeVolumen 		tiempoDeConstruccion := unaCantidadDeDias.	costoDeConstruccion := unPrecio.	plantaProcesadora := unaPlantaProcesadora		conectar: self;		yourself.	capacidadTotal := unaCantidadDeVolumen.		! !!TanqueDeAlmacenamiento methodsFor: 'printing' stamp: 'JuanVanecek 5/21/2017 23:18'!printOn: aStream	self subclassResponsibility ! !!TanqueDeAlmacenamiento methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 22:04'!tiempoDeConstruccion	^ tiempoDeConstruccion ! !!TanqueDeAlmacenamiento methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 22:04'!plantaProcesadora	^ plantaProcesadora ! !!TanqueDeAlmacenamiento methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 22:05'!capacidadTotal	^ capacidadTotal ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TanqueDeAlmacenamiento class	instanceVariableNames: ''!!TanqueDeAlmacenamiento class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 4/9/2017 11:27'!construidaEnDias: unaCantidadDeDias	conUnCostoTotalDe: unPrecio	conectadoA: unaPlantaProcesadora 	conCapacidadDe: unaCantidadDeVolumen 		^ self new 		initializeConstruidaEnDias: unaCantidadDeDias		conUnCostoTotalDe: unPrecio		conectadoA: unaPlantaProcesadora 		conCapacidadDe: unaCantidadDeVolumen ! !TanqueDeAlmacenamiento subclass: #TanqueDeAgua	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!TanqueDeAgua methodsFor: 'printing' stamp: 'JuanVanecek 5/21/2017 23:21'!printOn: aStream	aStream nextPutAll: ('Tanque para almacenar {1} m3 de agua' format: { self capacidadTotal })! !TanqueDeAlmacenamiento subclass: #TanqueDeGas	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!TanqueDeGas methodsFor: 'printing' stamp: 'JuanVanecek 5/21/2017 23:22'!printOn: aStream	aStream nextPutAll: ('Tanque para almacenar {1} m3 de gas' format: { self capacidadTotal })! !Object subclass: #Yacimiento	instanceVariableNames: 'tamanio parcelasLibres volumenInicial parcelasDefinidas composicionInicial'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Basicos'!!Yacimiento methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 14:45'!parcelaLibreDeTipo: unMantoGeologico	presionInicial: unCantidadDePresion 	yDistanciaAlReservorio: unaDistanciaEnMetros	^parcelasDefinidas size < tamanio		ifTrue: [ 			parcelasDefinidas add: (				ParcelaDeYacimiento 					deTipo: unMantoGeologico					conPresionInicial: unCantidadDePresion 					profunidadEnMetros: unaDistanciaEnMetros					alReservorioEn: self).		 ]		ifFalse: [ 			AssertionFailure signal: 'No hay más parcelas disponibles para este yacimiento' ]! !!Yacimiento methodsFor: 'accessing' stamp: 'JuanVanecek 5/18/2017 22:56'!composicionInicial		^ composicionInicial ! !!Yacimiento methodsFor: 'accessing' stamp: 'JuanVanecek 5/7/2017 14:43'!parcelasDefinidas	^ parcelasDefinidas! !!Yacimiento methodsFor: 'accessing' stamp: 'JuanVanecek 5/1/2017 16:49'!volumenDeProductoInicial	^ volumenInicial ! !!Yacimiento methodsFor: 'initialize' stamp: 'JuanVanecek 5/18/2017 22:37'!initializeDeTamanioEnHectareas: unasHectareas	volumenDeProducto: unVolumen 	compuestoPor: unaComposicionPorcentualDeReservorio 	tamanio := unasHectareas.	volumenInicial := unVolumen.	composicionInicial := unaComposicionPorcentualDeReservorio. 	parcelasDefinidas := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Yacimiento class	instanceVariableNames: ''!!Yacimiento class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/18/2017 22:37'!deTamanioEnHectareas: unasHectareas	volumenDeProducto: unVolumen 	compuestoPor: unaComposicionPorcentualDeReservorio 		self assertCantidadAdecuadaDeProducto: unVolumen.		^ self new 		initializeDeTamanioEnHectareas: unasHectareas		volumenDeProducto: unVolumen 		compuestoPor: unaComposicionPorcentualDeReservorio ! !!Yacimiento class methodsFor: 'private-accessing' stamp: 'JuanVanecek 5/1/2017 16:07'!minimaCantidadDeProducto		^ 10000000! !!Yacimiento class methodsFor: 'private-accessing' stamp: 'JuanVanecek 5/1/2017 16:07'!maximaCantidadDeProducto		^ 1000000000! !!Yacimiento class methodsFor: 'private-precondition' stamp: 'JuanVanecek 5/1/2017 16:09'!assertCantidadAdecuadaDeProducto: unVolumen		^ (unVolumen between: self minimaCantidadDeProducto and: self maximaCantidadDeProducto)		ifFalse: [ AssertionFailure signal: (			'La cantidad de producto tiene que estar entre {1} y {2} m3' format: { self minimaCantidadDeProducto . self maximaCantidadDeProducto })]! !Object subclass: #CriterioBehavior	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!!CriterioBehavior methodsFor: 'executing' stamp: 'JuanVanecek 5/7/2017 19:59'!ejecutarEn: unSimulador 	self subclassResponsibility ! !CriterioBehavior subclass: #ComposicionDeCriterios	instanceVariableNames: 'criterios'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!!ComposicionDeCriterios methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 18:03'!ejecutarEn: unSimulador	criterios do:[:criterio | criterio ejecutarEn: unSimulador ]! !CriterioBehavior subclass: #CriterioDeConstruccion	instanceVariableNames: 'cantidadDePozosAConstruir bloqueParaObtenerParcelas bloqueParaObtenerExcavadoras seleccionDeParcelas seleccionDeExcavadoras'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!!CriterioDeConstruccion methodsFor: 'execute' stamp: 'MonsiCapa 5/22/2017 20:38'!ejecutarEn: unSimulador 		| parcela | 		cantidadDePozosAConstruir timesRepeat: [ 		parcela := (seleccionDeParcelas ejecutarEn: unSimulador) first.		self			ifFound: (seleccionDeExcavadoras ejecutarEn: unSimulador)			do: [:excavadora |				unSimulador sistemaDeConstruccion construirPozoEn: parcela usando: excavadora.				cantidadDePozosAConstruir := cantidadDePozosAConstruir - 1]]! !!CriterioDeConstruccion methodsFor: 'private' stamp: 'JuanVanecek 5/13/2017 12:42'!construirPozosEn: unaColeccionDeParcelas usando: unaColeccionDeExcavadoras con: unSimulador 		| fecha planta sistemaDeConstruccion | 		fecha := unSimulador fechaDeSimulacion. 	sistemaDeConstruccion := unSimulador sistemaDeConstruccion. 	planta := (sistemaDeConstruccion plantasProcesadorasConstruidasAl: fecha) anyOne.	unaColeccionDeParcelas size <= unaColeccionDeExcavadoras size 		ifTrue: [			unaColeccionDeParcelas doWithIndex: [:parcela :i | 				sistemaDeConstruccion 					construirUnPozoEn: parcela 					conectadaA: planta 					con: (unaColeccionDeExcavadoras at: i)					arrancandoEl: fecha			]		 ]		ifFalse: [ self shouldBeImplemented ]! !!CriterioDeConstruccion methodsFor: 'initialize' stamp: 'MonsiCapa 5/22/2017 19:59'!initializeConstruir: unaCantidad 	parcelasObtenidasCon: unaEstrategiaDeSeleccionDeParcelas 	yExcavadorasCon: unaEstrategiaDeAlquilerDeExcavadoras 	cantidadDePozosAConstruir := unaCantidad. 	seleccionDeParcelas := unaEstrategiaDeSeleccionDeParcelas. 	seleccionDeExcavadoras := unaEstrategiaDeAlquilerDeExcavadoras! !!CriterioDeConstruccion methodsFor: 'testing' stamp: 'MonsiCapa 5/22/2017 20:40'!ifFound: unaExcavadora do: unClosure	^unaExcavadora ifNil: [] ifNotNilDo: unClosure! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CriterioDeConstruccion class	instanceVariableNames: ''!!CriterioDeConstruccion class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/7/2017 19:14'!construir: unaCantidad pozosEnLasParcelasMenosProfundasDe: unYacimiento 	^ self new 		initializeConstruir: unaCantidad		pozosEnLasParcelasObtenidasCon: [ 			unYacimiento parcelasDefinidas sortedAscBy: #distanciaAlReservorio ]		excavadorasObtenidasCon: [:simulador | 			simulador sistemaDeGestionDeExcavadoras excavadorasDisponibles sortedDescBy: #profundidadPorDia ]! !!CriterioDeConstruccion class methodsFor: 'instance creation' stamp: 'MonsiCapa 5/22/2017 19:58'!construir: unaCantidad usando: unaStrategySeleccionDeParcelas	^ self new		initializeConstruir: unaCantidad		parcelasObtenidasCon: unaStrategySeleccionDeParcelas		yExcavadorasCon: nil! !!CriterioDeConstruccion class methodsFor: 'instance creation' stamp: 'MonsiCapa 5/22/2017 20:00'!construir: unaCantidad seleccionandoParcelasCon: unaEstrategiaDeSeleccionDeParcelas yExcavadorasCon: unaEstrategiaDeSeleccionDeExcavadoras		^ self new		initializeConstruir: unaCantidad		parcelasObtenidasCon: unaEstrategiaDeSeleccionDeParcelas		yExcavadorasCon: unaEstrategiaDeSeleccionDeExcavadoras! !CriterioBehavior subclass: #CriterioDeExtraccionYReinyeccion	instanceVariableNames: 'criterios'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!!CriterioDeExtraccionYReinyeccion methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 18:06'!ejecutarEn: unSimulador	true whileTrue: [		self 			extraerProductoMientrasPueda; 			reinyectarSolamenteAgua. 		self siComposicionDePetroleoCriticaBreak.			 ]! !Object subclass: #EstrategiaDeSeleccionDeExcavadoras	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!EstrategiaDeSeleccionDeExcavadoras subclass: #EstrategiaDeAlquilerADemanda	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!!EstrategiaDeAlquilerADemanda methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 20:20'!ejecutarEn: unSimulador		^ unSimulador sistemaDeGestionDeExcavadoras excavadorasDisponibles! !Object subclass: #EstrategiaDeSeleccionDeParcelas	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!EstrategiaDeSeleccionDeParcelas subclass: #ParcelasMenosProfundasStrategy	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!!ParcelasMenosProfundasStrategy methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 20:19'!ejecutarEn: unSimulador 	^ unSimulador sistemaDeGestionDeParcelas parcelasDefinidas sortedAscBy: #distanciaAlReservorio! !Object subclass: #SistemaDeEjecucionDeCriterios	instanceVariableNames: 'simulador'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Criterios'!!SistemaDeEjecucionDeCriterios methodsFor: 'private-configuring' stamp: 'JuanVanecek 5/7/2017 13:39'!configurarseEnElSimulador	simulador usarComoSistemaDeEjecucionDeCriteriosA: self! !!SistemaDeEjecucionDeCriterios methodsFor: 'private-configuring' stamp: 'JuanVanecek 5/7/2017 13:40'!initializeComoParteDe: unSimulador	super initialize. 		simulador := unSimulador. 		self configurarseEnElSimulador! !!SistemaDeEjecucionDeCriterios methodsFor: 'execute' stamp: 'JuanVanecek 5/7/2017 19:59'!ejecutar: unCriterioDeConstruccion 	unCriterioDeConstruccion ejecutarEn: simulador ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SistemaDeEjecucionDeCriterios class	instanceVariableNames: ''!!SistemaDeEjecucionDeCriterios class methodsFor: 'instance creation' stamp: 'JuanVanecek 5/7/2017 14:07'!comoParteDe: unSistemaDeSimulacion 	^ self new initializeComoParteDe: unSistemaDeSimulacion! !Error subclass: #ConstruccionInvalida	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Construccion'!Object subclass: #PlanDeConstruccion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Construccion'!!PlanDeConstruccion methodsFor: 'Printing' stamp: 'JuanVanecek 4/9/2017 22:17'!printOn: aStream	aStream 		nextPutAll: 			('Plan para construir {1} desde el {2}' 				format: {self bienConstruidoOPorConstruir . self fechaDeInicioDeConstruccion})! !!PlanDeConstruccion methodsFor: 'Testing' stamp: 'JuanVanecek 4/9/2017 21:42'!estaTerminadoAl: aDate 	^ self fechaFinDeConstruccion < aDate! !!PlanDeConstruccion methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:32'!recursosNecesarios	self subclassResponsibility ! !!PlanDeConstruccion methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:33'!fechaDeInicioDeConstruccion			self subclassResponsibility ! !!PlanDeConstruccion methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:43'!recursosUtilizadosDurante: unaFecha	^ (unaFecha between: self fechaDeInicioDeConstruccion and: self fechaFinDeConstruccion)		ifTrue: [ self recursosNecesarios ]		ifFalse: [ #() ]! !!PlanDeConstruccion methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 17:53'!fechaFinDeConstruccion	self subclassResponsibility ! !!PlanDeConstruccion methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:12'!bienConstruidoOPorConstruir	self subclassResponsibility ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PlanDeConstruccion class	instanceVariableNames: ''!!PlanDeConstruccion class methodsFor: 'private-preconditions' stamp: 'JuanVanecek 5/17/2017 21:48'!assert: unBienAConstuir isA: unTipoDeBien	(unBienAConstuir isKindOf: unTipoDeBien) 		ifFalse: [ 			ConstruccionInvalida signal: ('Este plan solo construye {1}' format: { unTipoDeBien name })]! !PlanDeConstruccion subclass: #PlanDeConstruccionDePlanta	instanceVariableNames: 'plantaProcesadora fechaDeInicioDeConstruccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Construccion'!!PlanDeConstruccionDePlanta methodsFor: 'Initialize' stamp: 'JuanVanecek 4/9/2017 18:33'!fechaDeInicioDeConstruccion	^ fechaDeInicioDeConstruccion! !!PlanDeConstruccionDePlanta methodsFor: 'Initialize' stamp: 'JuanVanecek 4/9/2017 12:15'!initializeDe: unaPlantaProcesadora empezandoEl: unaFecha	plantaProcesadora := unaPlantaProcesadora.	fechaDeInicioDeConstruccion := unaFecha! !!PlanDeConstruccionDePlanta methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 17:53'!fechaFinDeConstruccion	^ fechaDeInicioDeConstruccion addDays: plantaProcesadora tiempoDeConstruccion! !!PlanDeConstruccionDePlanta methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:33'!recursosNecesarios	^ #()! !!PlanDeConstruccionDePlanta methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:14'!bienConstruidoOPorConstruir		^ plantaProcesadora! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PlanDeConstruccionDePlanta class	instanceVariableNames: ''!!PlanDeConstruccionDePlanta class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/17/2017 21:48'!para: unaPlantaProcesadora empezandoEl: unaFecha		self assert: unaPlantaProcesadora isA: PlantaProcesadora. 		^ self new initializeDe: unaPlantaProcesadora empezandoEl: unaFecha! !PlanDeConstruccion subclass: #PlanDeConstruccionDePozo	instanceVariableNames: 'pozoDeExtraccion excavadora fechaDeInicioDeConstruccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Construccion'!!PlanDeConstruccionDePozo methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:33'!fechaDeInicioDeConstruccion	^ fechaDeInicioDeConstruccion! !!PlanDeConstruccionDePozo methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 21:52'!fechaFinDeConstruccion		" El ultimo dia sigue en construccion"		^fechaDeInicioDeConstruccion 		addDays: ((pozoDeExtraccion distanciaAlReservorio / excavadora profundidadPorDia) * (1 + pozoDeExtraccion resistenciaDeLaParcela)) ceiling ! !!PlanDeConstruccionDePozo methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:33'!recursosNecesarios			^ Array with: excavadora ! !!PlanDeConstruccionDePozo methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 18:14'!bienConstruidoOPorConstruir		^ pozoDeExtraccion! !!PlanDeConstruccionDePozo methodsFor: 'Initialize' stamp: 'JuanVanecek 4/9/2017 17:49'!initializePara: unPozoDeExtraccion cavadoCon: unaExcavadoraRig arrancandoEl: unaFecha 	pozoDeExtraccion := unPozoDeExtraccion.	excavadora := unaExcavadoraRig. 	fechaDeInicioDeConstruccion := unaFecha.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PlanDeConstruccionDePozo class	instanceVariableNames: ''!!PlanDeConstruccionDePozo class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/17/2017 21:49'!para: unPozoDeExtraccion cavadoCon: unaExcavadoraRig empezandoEl: unaFecha	self assert: unPozoDeExtraccion isA: PozoDeExtraccion. 			^ self new 		initializePara: unPozoDeExtraccion 		cavadoCon: unaExcavadoraRig 		arrancandoEl: unaFecha! !PlanDeConstruccion subclass: #PlanDeConstruccionDeTanqueDeAgua	instanceVariableNames: 'tanqueDeAgua fechaDeInicioDeConstruccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Construccion'!!PlanDeConstruccionDeTanqueDeAgua methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 11:10'!fechaDeInicioDeConstruccion		^ fechaDeInicioDeConstruccion! !!PlanDeConstruccionDeTanqueDeAgua methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 11:12'!fechaFinDeConstruccion	^ fechaDeInicioDeConstruccion addDays: (tanqueDeAgua tiempoDeConstruccion - 1)! !!PlanDeConstruccionDeTanqueDeAgua methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 11:14'!recursosNecesarios			^ Array new! !!PlanDeConstruccionDeTanqueDeAgua methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 11:04'!bienConstruidoOPorConstruir	^ tanqueDeAgua ! !!PlanDeConstruccionDeTanqueDeAgua methodsFor: 'Initialize' stamp: 'JuanVanecek 5/1/2017 11:00'!initializeDe: unTanqueDeAlmacenamientoDeAgua empezandoEl: unaFecha	tanqueDeAgua := unTanqueDeAlmacenamientoDeAgua. 	fechaDeInicioDeConstruccion := unaFecha! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PlanDeConstruccionDeTanqueDeAgua class	instanceVariableNames: ''!!PlanDeConstruccionDeTanqueDeAgua class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/17/2017 21:49'!para: unTanqueDeAlmacenamientoDeAgua empezandoEl: unaFecha 	self assert: unTanqueDeAlmacenamientoDeAgua isA: TanqueDeAgua . 			^ self new initializeDe: unTanqueDeAlmacenamientoDeAgua empezandoEl: unaFecha! !PlanDeConstruccion subclass: #PlanDeConstruccionDeTanqueDeGas	instanceVariableNames: 'tanqueDeGas fechaDeInicioDeConstruccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Construccion'!!PlanDeConstruccionDeTanqueDeGas methodsFor: 'Initialize' stamp: 'JuanVanecek 5/1/2017 11:22'!initializeDe: unTanqueDeGas empezandoEl: unaFecha	tanqueDeGas := unTanqueDeGas. 	fechaDeInicioDeConstruccion := unaFecha! !!PlanDeConstruccionDeTanqueDeGas methodsFor: 'Accessing' stamp: 'JuanVanecek 5/7/2017 18:03'!fechaDeInicioDeConstruccion	^ fechaDeInicioDeConstruccion! !!PlanDeConstruccionDeTanqueDeGas methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 11:22'!fechaFinDeConstruccion	^ fechaDeInicioDeConstruccion addDays: (tanqueDeGas tiempoDeConstruccion - 1)! !!PlanDeConstruccionDeTanqueDeGas methodsFor: 'Accessing' stamp: 'JuanVanecek 5/17/2017 21:59'!recursosNecesarios		^ #()! !!PlanDeConstruccionDeTanqueDeGas methodsFor: 'Accessing' stamp: 'JuanVanecek 5/1/2017 11:23'!bienConstruidoOPorConstruir	^ tanqueDeGas ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PlanDeConstruccionDeTanqueDeGas class	instanceVariableNames: ''!!PlanDeConstruccionDeTanqueDeGas class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/17/2017 21:46'!para: unTanqueDeGas empezandoEl: unaFecha	self assert: unTanqueDeGas isA: TanqueDeGas. 		^ self new initializeDe: unTanqueDeGas empezandoEl: unaFecha! !Object subclass: #SistemaDeConstruccionDePozos	instanceVariableNames: 'planesDeConstruccion calculadoraDePresion eventosSobrePozos'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Modelo-Construccion'!!SistemaDeConstruccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/17/2017 22:10'!sumarCapacidadesDe: tanquesDeAlmacenamiento conectadosA: unaPlantaProcesadora	| capacidades | 		capacidades := tanquesDeAlmacenamiento		select: [:tanque | tanque plantaProcesadora = unaPlantaProcesadora ] 		thenCollect: #capacidadTotal.			^ capacidades sumNumbers: [ :capacidad | capacidad ]! !!SistemaDeConstruccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/7/2017 18:28'!asertarQueLosRecursosNoSonUtilizados: unPlanDeConstruccion		| duracionPlan | 	duracionPlan := 		unPlanDeConstruccion fechaDeInicioDeConstruccion to: unPlanDeConstruccion fechaFinDeConstruccion.		planesDeConstruccion do: [:plan | | duracionDePlanExistente  | 		duracionDePlanExistente := plan fechaDeInicioDeConstruccion to: plan fechaFinDeConstruccion.				((plan recursosNecesarios intersection: unPlanDeConstruccion recursosNecesarios) isNotEmpty			and: [(duracionDePlanExistente intersection: duracionPlan) isNotNil])				ifTrue: [ 					ConstruccionInvalida signal: ('Los recursos se solapan con los de {1}' format: {plan}) ]]	! !!SistemaDeConstruccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/7/2017 18:57'!filrarBienesDeTipo: tipoDeBien construidosLuegoDe: unaFecha	^ planesDeConstruccion		select: [ :plan | 			(plan bienConstruidoOPorConstruir isKindOf: tipoDeBien) and: [ plan estaTerminadoAl: unaFecha ] ]		thenCollect: [ :plan | plan bienConstruidoOPorConstruir ]! !!SistemaDeConstruccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/7/2017 18:04'!agregarSiEsUnPlanValido: unPlanDeConstruccion	self asertarQueLosRecursosNoSonUtilizados: unPlanDeConstruccion.		planesDeConstruccion add: unPlanDeConstruccion.		^ unPlanDeConstruccion bienConstruidoOPorConstruir ! !!SistemaDeConstruccionDePozos methodsFor: 'private' stamp: 'JuanVanecek 5/13/2017 01:35'!estaConstruido: unBien a: unaFecha	^ (self filrarBienesDeTipo: unBien class construidosLuegoDe: unaFecha) includes: unBien! !!SistemaDeConstruccionDePozos methodsFor: 'management' stamp: 'MonsiCapa 5/22/2017 20:41'!construirPozoEn: aParcelaDeYacimiento usando: aCollection 	self shouldBeImplemented.! !!SistemaDeConstruccionDePozos methodsFor: 'testing' stamp: 'JuanVanecek 4/9/2017 18:50'!estaDisponible: unaExcavadoraRig el: unaFecha 	^ planesDeConstruccion allSatisfy: [:plan | ((plan recursosUtilizadosDurante: unaFecha) includes: unaExcavadoraRig) not ]! !!SistemaDeConstruccionDePozos methodsFor: 'as yet unclassified' stamp: 'MonsiCapa 5/22/2017 20:23'!planesDeConstruccionDePozos		^ planesDeConstruccion select: [ :plan | 			(plan bienConstruidoOPorConstruir isKindOf: PozoDeExtraccion) ]! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-construccion' stamp: 'JuanVanecek 5/7/2017 17:52'!construirUnPozoEn: unaParcelaDeYacimiento conectadaA: unaPlantaProcesadora con: unaExcavadoraRig arrancandoEl: unaFecha 	| plan | 		plan := PlanDeConstruccionDePozo 		para: (PozoDeExtraccion en: unaParcelaDeYacimiento conectadaA: unaPlantaProcesadora) 		cavadoCon: unaExcavadoraRig 		empezandoEl: unaFecha.		^ self agregarSiEsUnPlanValido: plan! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-construccion' stamp: 'JuanVanecek 5/7/2017 17:52'!construirUnaPlantaProcesadora: unaPlantaProcesadora arrancandoEl: unaFecha 	^ self agregarSiEsUnPlanValido: (		PlanDeConstruccionDePlanta			para: unaPlantaProcesadora			empezandoEl: unaFecha)! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-construccion' stamp: 'JuanVanecek 5/7/2017 17:52'!construirTanqueDeGas: unTanqueDeGas empezandoEl: unaFecha	^ self agregarSiEsUnPlanValido: (		PlanDeConstruccionDeTanqueDeGas			para: unTanqueDeGas			empezandoEl: unaFecha)! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-construccion' stamp: 'JuanVanecek 5/1/2017 15:04'!fechaDeFinConstruccionDe: unPozoDeExtraccion 	^ planesDeConstruccion 		detect: [:plan | plan bienConstruidoOPorConstruir = unPozoDeExtraccion ]		ifFound: [:plan | plan fechaFinDeConstruccion ]		ifNone: [ Exception signal: ('Este simulador no construyo {1}' format: { unPozoDeExtraccion }) ]! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-construccion' stamp: 'JuanVanecek 5/7/2017 17:52'!construirTanqueDeAgua: aTanqueDeAlmacenamientoDeAgua empezandoEl: unaFecha	^ self agregarSiEsUnPlanValido: (		PlanDeConstruccionDeTanqueDeAgua			para: aTanqueDeAlmacenamientoDeAgua			empezandoEl: unaFecha) ! !!SistemaDeConstruccionDePozos methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 22:10'!capacidadTotalDeAguaDe: unaPlantaProcesadora a: unaFecha 		^ self 		sumarCapacidadesDe: (self tanquesDeAguaConstruidosAl: unaFecha)		conectadosA: unaPlantaProcesadora! !!SistemaDeConstruccionDePozos methodsFor: 'accessing' stamp: 'JuanVanecek 5/17/2017 22:09'!capacidadTotalDeGasDe: unaPlantaProcesadora a: unaFecha 		^ self 		sumarCapacidadesDe: (self tanquesDeGasConstruidosAl: unaFecha)		conectadosA: unaPlantaProcesadora! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-bienes construidos' stamp: 'JuanVanecek 5/1/2017 13:31'!pozosConstruidosAl: unaFecha 	^ self filrarBienesDeTipo: PozoDeExtraccion construidosLuegoDe: unaFecha! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-bienes construidos' stamp: 'JuanVanecek 5/1/2017 13:32'!tanquesDeGasConstruidosAl: unaFecha	^ self filrarBienesDeTipo: TanqueDeGas construidosLuegoDe: unaFecha! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-bienes construidos' stamp: 'JuanVanecek 5/1/2017 13:31'!plantasProcesadorasConstruidasAl: unaFecha 		^ self filrarBienesDeTipo: PlantaProcesadora construidosLuegoDe: unaFecha! !!SistemaDeConstruccionDePozos methodsFor: 'accessing-bienes construidos' stamp: 'JuanVanecek 5/1/2017 13:32'!tanquesDeAguaConstruidosAl: unaFecha	^ self filrarBienesDeTipo: TanqueDeAgua construidosLuegoDe: unaFecha 	! !!SistemaDeConstruccionDePozos methodsFor: 'initialize' stamp: 'JuanVanecek 5/7/2017 06:38'!initializeComoParteDe: aSistemaDeSimulacion 	super initialize. 		aSistemaDeSimulacion usarComoSistemaDeConstruccionA: self.	planesDeConstruccion := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SistemaDeConstruccionDePozos class	instanceVariableNames: ''!!SistemaDeConstruccionDePozos class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/1/2017 13:52'!calcuandoPresionCon: unaCalculadoraDePresiones 	^ self new initializeCalcuandoPresionCon: unaCalculadoraDePresiones ! !!SistemaDeConstruccionDePozos class methodsFor: 'Instance Creation' stamp: 'JuanVanecek 5/7/2017 06:37'!comoParteDe: aSistemaDeSimulacion 		^ self new initializeComoParteDe: aSistemaDeSimulacion ! !