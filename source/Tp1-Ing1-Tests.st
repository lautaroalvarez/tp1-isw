TestCase subclass: #TestTp1	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Tests'!!TestTp1 methodsFor: 'Testing' stamp: 'JuanVanecek 4/5/2017 19:37'!testNoPuedoTenerMasParcelasEnUnYacimientoQueSuTamanio	| yacimiento | 		yacimiento := Yacimiento 		deTamanioEnHectareas: 3		compuestoPorAguaEn: 10		porGasEn: 30		yEnPetroleo: 60.			(1 to: 4) do: [ :i | | crearYacimiento | 				crearYacimiento := [ 			yacimiento 				parcelaLibreDeTipo: self terrenoRocoso				presionInicial: 100				yDistanciaAlReservorio: 5 ].					i < 4				ifTrue: crearYacimiento 				ifFalse: [ self should: crearYacimiento raise: AssertionFailure description: 'No hay más parcelas disponibles para este yacimiento'	 ]		 ]! !!TestTp1 methodsFor: 'Testing' stamp: 'JuanVanecek 4/5/2017 19:00'!testLosCompuestosDeUnYacimientoTieneQueSerSu100porCiento	self		should: [ 				Yacimiento 					deTamanioEnHectareas: 1					compuestoPorAguaEn: 10					porGasEn: 30					yEnPetroleo: 70 ] 			raise: AssertionFailure			description: 'Los compuestos tienen que representar el 100% del reservorio';		should: [ 				Yacimiento 					deTamanioEnHectareas: 1					compuestoPorAguaEn: 10					porGasEn: 20					yEnPetroleo: 60 ] 			raise: AssertionFailure			description: 'Los compuestos tienen que representar el 100% del reservorio';		should: [ 				Yacimiento 					deTamanioEnHectareas: 1					compuestoPorAguaEn: 100					porGasEn: 10					yEnPetroleo: 60 ] 			raise: AssertionFailure			description: 'Los compuestos tienen que representar el 100% del reservorio'.		self 		shouldnt: [ 				Yacimiento 					deTamanioEnHectareas: 1					compuestoPorAguaEn: 10					porGasEn: 30					yEnPetroleo: 60 ] 			raise: AssertionFailure;		shouldnt: [ 				Yacimiento 					deTamanioEnHectareas: 1					compuestoPorAguaEn: 0					porGasEn: 0					yEnPetroleo: 100 ] 			raise: AssertionFailure! !!TestTp1 methodsFor: 'Testing' stamp: 'JuanVanecek 4/8/2017 13:19'!testRegistrarUnaExcavadoraEnElCatalogo	| excavadora catalogo | 		excavadora := ExcavadoraRig 		perforandoEnMetrosEnUnDia: 1		consumiendoEnLitros: 3. 			catalogo := (CatalogoDeExcavadorasRig new)		registrar: excavadora 			aUnCostoPorDia: 500 			porUnMinimoDeDias: 4;		yourself.			self assertTheOnlyOneIn: catalogo excavadorasDisponibles is: excavadora.		catalogo conLosRegistrosHacer: [:excavadoraDisponible :costoPorDia :alquilerMinimo | 		self 			assert: excavadoraDisponible equals: excavadora;			assert: costoPorDia equals: 500; 			assert: alquilerMinimo equals: 4		 ]! !!TestTp1 methodsFor: 'Testing' stamp: 'JuanVanecek 4/9/2017 11:25'!testConectarTanquesDeAlmacenamientoAUnaPlantaProcesadora 	| planta tanqueDeGas tanqueDeAgua | 		planta := PlantaProcesadora		construidaEnDias: 10		conUnCostoTotalDe: 4000		procesandoUnVolumenDiarioDe: 40.			tanqueDeGas := TanqueDeAlmacenamientoDeGas 		construidaEnDias: 1		conUnCostoTotalDe: 4		conectadoA: planta		conCapacidadDe: 400.	tanqueDeAgua := TanqueDeAlmacenamientoDeAgua 		construidaEnDias: 1		conUnCostoTotalDe: 4		conectadoA: planta		conCapacidadDe: 500.		self 		assert: planta tanquesDeAlmacenamiento 		hasTheSameElementsThat: (Array with: tanqueDeGas with: tanqueDeAgua)! !!TestTp1 methodsFor: 'Asserting' stamp: 'JuanVanecek 4/8/2017 13:25'!assertTheOnlyOneIn: aCollection is: anElement 	self 		assert: aCollection size equals: 1;		assert: aCollection first equals: anElement! !!TestTp1 methodsFor: 'Asserting' stamp: 'JuanVanecek 4/9/2017 11:13'!assert: aCollection hasTheSameElementsThat: anotherCollection 	self assert: aCollection size equals: anotherCollection size.		anotherCollection do: [:element | 		self assert: (aCollection includes: element)		 ]! !!TestTp1 methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 22:05'!terrenoRocoso		^MantoGeologico conocidoComo: 'Terreno Rocoso' ofreciendoUnaResistenciaDel: 0! !TestCase subclass: #TestsSistemaDeGestionDePozos	instanceVariableNames: 'sistemaDeGestion yacimiento'	classVariableNames: ''	poolDictionaries: ''	category: 'Tp1-Ing1-Tests'!!TestsSistemaDeGestionDePozos methodsFor: 'Asserting' stamp: 'JuanVanecek 4/9/2017 16:58'!assertTheOnlyOneIn: aCollection is: anElement 		self assert: aCollection size equals: 1. 	self assert: aCollection first equals: anElement! !!TestsSistemaDeGestionDePozos methodsFor: 'Asserting' stamp: 'JuanVanecek 4/9/2017 12:21'!assertIsEmpty: aCollection 	self assert: aCollection isEmpty! !!TestsSistemaDeGestionDePozos methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 17:27'!parcelaLibreConUnaResistenciaDe: unPorcentaje yDistanciaAlReservorio: unaDistanciaEnMetros	^ yacimiento 		parcelaLibreDeTipo: (MantoGeologico conocidoComo: 'manto' ofreciendoUnaResistenciaDel: unPorcentaje)		presionInicial: 500 		yDistanciaAlReservorio: unaDistanciaEnMetros! !!TestsSistemaDeGestionDePozos methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 12:07'!diaDeHoy	^ Date today! !!TestsSistemaDeGestionDePozos methodsFor: 'Accessing' stamp: 'JuanVanecek 4/9/2017 17:14'!unaPlantaProcesadora			^ PlantaProcesadora 			construidaEnDias: 20 			conUnCostoTotalDe: 10000 			procesandoUnVolumenDiarioDe: 50.	! !!TestsSistemaDeGestionDePozos methodsFor: 'Testing' stamp: 'JuanVanecek 4/9/2017 21:49'!testUnPozoEstaDisponibleDespuesDeConstruido	| plantaProcesadora parcela excavadora pozo | 		plantaProcesadora := self unaPlantaProcesadora.	parcela := self parcelaLibreConUnaResistenciaDe: 0 yDistanciaAlReservorio: 11.	excavadora := ExcavadoraRig perforandoEnMetrosEnUnDia: 2 consumiendoEnLitros: 5.	pozo := sistemaDeGestion 		construirUnPozoEn: parcela 		conectadaA: plantaProcesadora		con: excavadora 		arrancandoEl: self diaDeHoy.			self 		assertIsEmpty: (sistemaDeGestion pozosConstruidosAl: self diaDeHoy);		assertIsEmpty: (sistemaDeGestion pozosConstruidosAl: self diaDeHoy next);		assertIsEmpty: (sistemaDeGestion pozosConstruidosAl: (self diaDeHoy addDays: 6));		assertTheOnlyOneIn: (sistemaDeGestion pozosConstruidosAl: (self diaDeHoy addDays: 7)) is: pozo.			self 		assert: (sistemaDeGestion estaDisponible: excavadora el: self diaDeHoy previous);		deny: (sistemaDeGestion estaDisponible: excavadora el: self diaDeHoy);		deny: (sistemaDeGestion estaDisponible: excavadora el: (self diaDeHoy addDays: 6));		assert: (sistemaDeGestion estaDisponible: excavadora el: (self diaDeHoy addDays: 7))! !!TestsSistemaDeGestionDePozos methodsFor: 'Testing' stamp: 'JuanVanecek 4/9/2017 21:53'!testResistenciaDelTerrenoAfectaTrabajoDePerforacion	| plantaProcesadora parcela excavadora pozo | 		plantaProcesadora := self unaPlantaProcesadora.	parcela := self parcelaLibreConUnaResistenciaDe: 0.5 yDistanciaAlReservorio: 11.	excavadora := ExcavadoraRig perforandoEnMetrosEnUnDia: 2 consumiendoEnLitros: 5.	pozo := sistemaDeGestion 		construirUnPozoEn: parcela 		conectadaA: plantaProcesadora		con: excavadora 		arrancandoEl: self diaDeHoy.		self 		assertIsEmpty: (sistemaDeGestion pozosConstruidosAl: self diaDeHoy);		assertIsEmpty: (sistemaDeGestion pozosConstruidosAl: self diaDeHoy next);		assertIsEmpty: (sistemaDeGestion pozosConstruidosAl: (self diaDeHoy addDays: 9));		assertTheOnlyOneIn: (sistemaDeGestion pozosConstruidosAl: (self diaDeHoy addDays: 10)) is: pozo.			self 		assert: (sistemaDeGestion estaDisponible: excavadora el: self diaDeHoy previous);		deny: (sistemaDeGestion estaDisponible: excavadora el: self diaDeHoy);		deny: (sistemaDeGestion estaDisponible: excavadora el: (self diaDeHoy addDays: 9));		assert: (sistemaDeGestion estaDisponible: excavadora el: (self diaDeHoy addDays: 10))! !!TestsSistemaDeGestionDePozos methodsFor: 'Testing' stamp: 'JuanVanecek 4/9/2017 21:43'!testUnaPlantaProcesadoraEstaDisponibleDespuesDeConstruida	| plantaProcesadora | 		plantaProcesadora := self unaPlantaProcesadora.		sistemaDeGestion 		construirUnaPlantaProcesadora: plantaProcesadora		arrancandoEl: self diaDeHoy.			self 		assertIsEmpty: (sistemaDeGestion plantasProcesadorasConstruidasAl: self diaDeHoy);		assertIsEmpty: (sistemaDeGestion plantasProcesadorasConstruidasAl: (self diaDeHoy addDays: plantaProcesadora tiempoDeConstruccion));		assertTheOnlyOneIn: (sistemaDeGestion plantasProcesadorasConstruidasAl: (self diaDeHoy addDays: plantaProcesadora tiempoDeConstruccion + 1))			is: plantaProcesadora.! !!TestsSistemaDeGestionDePozos methodsFor: 'SetUp' stamp: 'JuanVanecek 4/9/2017 11:36'!setUp	super setUp. 		sistemaDeGestion := SistemaDeGestionDePozos new.		self setUpYacimiento.! !!TestsSistemaDeGestionDePozos methodsFor: 'SetUp' stamp: 'JuanVanecek 4/9/2017 11:36'!setUpYacimiento		yacimiento := Yacimiento 		deTamanioEnHectareas: 5		compuestoPorAguaEn: 10		porGasEn: 20		yEnPetroleo: 70.			! !